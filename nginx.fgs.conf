
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 200m;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8888;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   D:/nginx-1.21.4/static/;
            index  index.html index.htm;
        }
		server_tokens off;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # 测试访问地址，weight表示分给该服务器的请求比重，两个都是1，则按照1:1来分配，
    upstream testbackend {
        server 127.0.0.1:18089 weight=1;
        server 127.0.0.1:18088 weight=1;
    }
	
	    # 正式访问地址，weight表示分给该服务器的请求比重，两个都是1，则按照1:1来分配，
    upstream prodbackend {
        server 127.0.0.1:18085 weight=1;
        server 127.0.0.1:18086 weight=1;
    }

  	#app
 server {
        listen       18087;
        server_name  127.0.0.1;
		
  

	  #location /dxsjjgl {
        #      alias  /home/ruoyi/ruoyi-dist;
		  #	try_files $uri $uri/ /index.html;
       #       index  index.html index.htm;
      #    }


 
		  
          location /{
      
 	 # 域名正式版
                root    D:/projects/fgsapppc/distdomain;
             try_files $uri $uri/ /index.html;
             index  index.html index.htm;
          }
 	#  ip正式版
      location /ip {
		proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
              alias   D:/projects/fgsapppc/distip;
           try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }

	#  fgstest 测试版
      location /fgstest {
		proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
              alias   D:/projects/fgsapppc/distfgstest;
           try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }
 # 正式版后端
       location /prod-api/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			#proxy_pass http://127.0.0.1:18085/;
			proxy_pass http://prodbackend/;
			proxy_read_timeout  3600;
		}

       # 测试版后端
	location /test-api/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			#proxy_pass http://127.0.0.1:18088/;
			proxy_pass http://testbackend/;
			proxy_read_timeout  3600;
		}
		 # 定时任务
		 location /dsrw/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://localhost:8082/dsrw/;
		}
	 
		
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

 

server {
        listen       10092;
        server_name  127.0.0.1; 

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            #root   html;
            root    D:/fgs/dist/;
            try_files $uri $uri/ /index.html;
            index  index.html index.htm;
        }
location /prod-api/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header 

REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:18082/;
		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
